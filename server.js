import express from "express";
import cors from "cors";
import { spawn } from "child_process";
import fs from "fs";
import path from "path";

const app = express();
const PORT = 3000;

// Use CORS to allow frontend requests
app.use(cors());

// Serve static files from the 'public' directory
app.use(express.static("public"));

// A whitelist of allowed category files to prevent directory traversal
const ALLOWED_CATEGORIES = ["mens", "womens", "designer", "shoes", "electronics"];

// API endpoint to get sales data based on a category
app.get("/api/sales", (req, res) => {
  const category = req.query.category;

  // Default to 'mens.json' if the category is missing or not in the whitelist
  const categoryFile = (category && ALLOWED_CATEGORIES.includes(category))
    ? `${category}.json`
    : 'mens.json';
    
  const salesFilePath = path.join(process.cwd(), categoryFile);
  
  let sales = [];
  try {
    if (fs.existsSync(salesFilePath)) {
      const fileContent = fs.readFileSync(salesFilePath, "utf-8");
      if (fileContent) {
        sales = JSON.parse(fileContent);
      }
    }
  } catch (err) {
    console.error(`Error parsing ${categoryFile}:`, err.message);
    console.warn(`The ${categoryFile} file is corrupt or empty. A new file will be generated by the scraper.`);
  }
  res.json(sales);
});

// Start the Express server
app.listen(PORT, () => {
  console.log(`âœ… Dashboard running at http://localhost:${PORT}`);
  
  // Start the scraper script in a detached process
  const scraper = spawn('node', ['vinted.js'], {
    detached: true,
    stdio: 'inherit'
  });

  scraper.unref();

  console.log("ðŸš€ Vinted scraper process has been started.");
});
